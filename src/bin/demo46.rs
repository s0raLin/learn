/// 绑定、作用域、生命周期
/// ```rust
/// fn main() {
///     let s = "hello world".to_string();
/// }
/// ```
/// 以上代码中let语义是这样的：
/// * let绑定了标识符a和存储字符串“hello world”的那块内存
/// ，从而a对那块内存拥有所有权。所以此处a被称为绑定
/// * 如果此时使用let声明另一个绑定b,并将a赋值给b,如
/// ```rust
/// let b = a;
/// ```
/// 则此时比如会将a对字符串的所有权转让给b。
/// * 因为a是String类型，不能实现Copy，
/// 所以这种行为也可以理解为对a进行解绑 ，然后从新绑定给b
///
///
fn main() {}
